"""
This type stub file was generated by pyright.
"""

from rcrs_core.connection.URN import Entity
from abc import ABC, abstractmethod
from rcrs_core.entities.human import Human

class Agent(ABC):
    def __init__(self, pre) -> None:
        ...
    
    @abstractmethod
    def precompute(self): # -> None:
        ...
    
    @abstractmethod
    def think(self, time, change_set, hear): # -> None:
        ...
    
    def get_name(self): # -> str:
        ...
    
    def get_id(self): # -> EntityID | None:
        ...
    
    def set_send_msg(self, connection_send_func): # -> None:
        ...
    
    def start_up(self, request_id): # -> None:
        ...
    
    def post_connect(self): # -> None:
        ...
    
    def message_received(self, msg): # -> None:
        ...
    
    def handle_connect_error(self, msg):
        ...
    
    def handle_connect_ok(self, msg): # -> None:
        ...
    
    def sendAKAcknowledge(self, request_id): # -> None:
        ...
    
    def process_sense(self, msg): # -> None:
        ...
    
    def me(self) -> Human:
        ...
    
    def location(self) -> Entity:
        ...
    
    def random_walk(self): # -> list[Any]:
        ...
    
    def send_clear(self, time, target): # -> None:
        ...
    
    def send_clear_area(self, time, x=..., y=...): # -> None:
        ...
    
    def send_load(self, time, target): # -> None:
        ...
    
    def send_move(self, time, path, x=..., y=...): # -> None:
        ...
    
    def send_rescue(self, time, target): # -> None:
        ...
    
    def send_rest(self, time_step): # -> None:
        ...
    
    def send_say(self, time_step: int, message: str): # -> None:
        ...
    
    def send_speak(self, time_step: int, message: str, channel: int): # -> None:
        ...
    
    def send_subscribe(self, time, channel): # -> None:
        ...
    
    def send_tell(self, time_step: int, message: str): # -> None:
        ...
    
    def send_unload(self, time): # -> None:
        ...
    


